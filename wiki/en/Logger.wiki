#summary Kohana Log Viewr
#labels 3.0,Library,icyleaf


= Logger Library =

|| author || icyleaf||
|| version || 0.1 ||

the Logger library is useful for two things:

 # List all log files form specified directory
 # View complated infomations for one log file
 
== Overview ==

To load the Logger library, add the following code to your controller constructor, or to a particular controller method:

{{{
// Instance ,default log directory is - APPPATH.'logs'。
$logger = Logger::instance();

// Custom log directory - APPPATH.'app1/logs'
logger = Logger::instance(APPPATH.'app1/logs');
}}}

== Property ==

=== path ===

Dynamic setting log directory.

{{{
// After instance logger library, then setting this directory to log directory - APPPATH.'app1/logs'
$logger->path = APPPATH.'app1/logs';
}}}

== Method ==

=== get_logs() ===

get_logs($year=NULL, $month=NULL, $day=NULL) accepts multiple parameters. get all log files returns it as an array. It has three parameters to specified log directory：

  * (int) $year  - year to query
  * (int) $month - month to query
  * (int) $day   - day to query
  * return result as an (array), if not found file(s) return NULL

Example：
{{{
// return all log files
$log_files = $logger->get_logs();
// Output for debug
echo Kohana::debug($log_files);

// cutsom query by date, i.e, query log files in October 2009
$log_2009_10_files = $logger->get_logs(2009, 10);
// Output for debug
echo Kohana::debug($log_files);
}}}

Result：
{{{
// return result by calling $logger->get_logs()
array(2) (
    2009 => array(1) (
        10 => array(3) (
            10 => array(3) (
                "file" => string(45) "E:\PHP\cactus\application\logs/2009/10/10.php"
                "created_date" => integer 1255146704
                "modify_date" => integer 1255164921
            )
            12 => array(3) (
                "file" => string(45) "E:\PHP\cactus\application\logs/2009/10/12.php"
                "created_date" => integer 1255323052
                "modify_date" => integer 1255344031
            )
            13 => array(3) (
                "file" => string(45) "E:\PHP\cactus\application\logs/2009/10/13.php"
                "created_date" => integer 1255397764
                "modify_date" => integer 1255397764
            )
        )
    )
)
}}}

=== get_log() ===

Similar get_logs() above, accepts multiple parameters. but return complated log informations.。

Example：
{{{
// Get log file on 10/12/2009
$log_content = $logger->get_log(2009, 10, 12);
// output for debug
echo Kohana::debug($log_content);
}}}

Result：
{{{
array(4) (
    0 => array(3) (
        "date" => integer 1255323052
        "type" => string(5) "ERROR"
        "desc" => string(129) "Kohana_Request_Exception [ 0 ]: Unable to find a route to match the URI: favicon.ico ~ SYSPATH/classes\kohana\request.php [ 571 ]"
    )
    1 => array(3) (
        "date" => integer 1255323055
        "type" => string(5) "ERROR"
        "desc" => string(129) "Kohana_Request_Exception [ 0 ]: Unable to find a route to match the URI: favicon.ico ~ SYSPATH/classes\kohana\request.php [ 571 ]"
    )
    2 => array(3) (
        "date" => integer 1255343991
        "type" => string(5) "ERROR"
        "desc" => string(181) "ErrorException [ 2048 ]: Non-static method Logger::instance() should not be called statically, assuming $this from incompatible context ~ APPPATH/classes\controller\logger.php [ 7 ]"
    )
    3 => array(3) (
        "date" => integer 1255344031
        "type" => string(5) "ERROR"
        "desc" => string(188) "ErrorException [ 2 ]: Missing argument 1 for Logger::get_logs(), called in E:\PHP\cactus\application\classes\controller\logger.php on line 9 and defined ~ APPPATH/classes\logger.php [ 35 ]"
    )
)
}}}


== Source ==

Kohana v3.0

 * libraries/[http://code.google.com/p/kohana-fans-cn/source/browse/trunk/3.0/libraries/logger.php logger.php]